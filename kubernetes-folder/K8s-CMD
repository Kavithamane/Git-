# kubectl cluster info 
 
# kubectl create -f <pod.yml> 

# kubectl apply -f <file.yml> 

# kubectl get pods 

# kubectl get pods -o wide 

# kubectl describe pod <pod-name> 

# kubectl get pods --show-labels

# kubectl label pods <pod-name> <key=value>

kubectl label pods <pod-name> <key=value1> <key=value2> <key-value3>  

# kubectl get pods -l env=development 

# kubectl get pods -l env!=development 

# kubectl get pods -l 'env notin (development,testing)'

# kubectl get pods -l 'env in (development,testing)'

# kubectl get pods -l class=pods, myname=kavitha

# kubectl deleted pod <pod.yml> 

# rm -rf <pod.yml> 

# kubectl delete pod <pod-name> 

# kubectl delete pods -l env=development

# kubectl delete pod -l env!=development

# kubectl describe pods nodelabels

# kubectl label nodes ip-172.63.45.21 hardware=t2-micro		=> assign label to node in order to match pod  label to node label so that each time pod get recreated it get assigned to the defined node.

# kubectl get rc 

# kubectl get rc -o wide 

# kubectl describe rc <rc-name>

# kubectl scale --replicas=5 rc myreplica

#  kubectl scale --replicas=5 rc -l myname=kavitha 

# kubectl get rs 

# kubectl get rs -o wide 

# # kubectl scale --replicas=1 rs/myrs

# kubectl get deploy 

# kubectl get deploy -o wide 

# kubectl describe deploy mydeployment

# kubectl logs -f <pod-name> 

#  kubectl rollout status deployment mydeployments

# kubectl rollout history deployment mydeployments

# kubectl rollout undo deployment mydeployments

# kubectl rollout undo  deployment mydeployments --to-revision=2

# kubectl exec -it testpod -c c00 -- bin/bash 

# apt update && apt install curl          => package update and get install in container 

# curl localhost:80

# curl POD-IP:80 

# curl custer-IP:80 

# DNS-Public-IP:Assigned-Port by service 

# kubectl get svc 

# kubectl describe svc <service-name> 

# kubectl exec -it <pod-name> -- ls /tmp/hostpath 

# kubectl exec -it <pod-name> -- ls /tmp/emptyDir 

# kubectl get pv 

# kubectl describe pv <pv-name> 

# kubectl get pvc 

# kubectl describe pvc <pvc-name> 




